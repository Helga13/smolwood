@charset "UTF-8";


@mixin pseudo {
	position: relative;
	&::before, &::after {
		position: absolute;
		content: '';
		top: 0;
		left: 0;
	}
};
@mixin clearfix {
	&::after {
		clear: both;
		display: table;
		content: '';
	}
};

// font size: 16px;
@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@mixin line-height($heightValue: 1.6) {
  line-height: ($heightValue * 10) + px;
  line-height: $heightValue + rem;
}

///font stacks
$font-stack-helvetica: (
  "Helvetica Neue",
  "Helvetica",
  "Arial",
  sans-serif,
);

$font-stack-lucida-grande: (
  "Lucida Grande",
  "Lucida Sans Unicode",
  "Geneva",
  "Verdana",
  sans-serif,
);

$font-stack-verdana: (
  "Verdana",
  "Geneva",
  sans-serif,
);

$font-stack-system: (
  -apple-system,
  BlinkMacSystemFont,
  "Segoe UI",
  "Roboto",
  "Oxygen",
  "Ubuntu",
  "Cantarell",
  "Fira Sans",
  "Droid Sans",
  "Helvetica Neue",
  sans-serif,
);

$font-stack-garamond: (
  "Garamond",
  "Baskerville",
  "Baskerville Old Face",
  "Hoefler Text",
  "Times New Roman",
  serif,
);

$font-stack-georgia: (
  "Georgia",
  "Times",
  "Times New Roman",
  serif,
);

$font-stack-hoefler-text: (
  "Hoefler Text",
  "Baskerville Old Face",
  "Garamond",
  "Times New Roman",
  serif,
);

$font-stack-consolas: (
  "Consolas",
  "monaco",
  monospace,
);

$font-stack-courier-new: (
  "Courier New",
  "Courier",
  "Lucida Sans Typewriter",
  "Lucida Typewriter",
  monospace,
);

$font-stack-monaco: (
  "monaco",
  "Consolas",
  "Lucida Console",
  monospace,
);

//Font-face
//example 
//
// @include font-face('museosans-300', "../fonts/museosanscyrl_300" ,null, null, ttf eot woff2 woff)
// @include font-face('Samplinal', 'fonts/Samplinal', 500, normal, eot woff2 woff);
//
// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

//Transitions

@mixin transition($name...) {
	transition: $name 0.3s ease 0s;
}
@function transition-property-names($props) {
  $new-props: ();

  @each $prop in $props {
	$new-props: append($new-props, transition-property-name($prop), comma);
  }

  @return $new-props;
}